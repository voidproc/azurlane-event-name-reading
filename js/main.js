const AzurlaneEvents = [
  {
    "name": "黙示の遺構",
    "tagged": "黙示[もくし]の[]遺構[いこう]",
    "begin": "2023/02/23",
    "end": "2023/03/09",
  },
  {
    "name": "積重なる事象の幻界",
    "tagged": "積重[つみかさ]なる[]事象[じしょう]の[]幻界[げんかい]",
    "begin": "2022/12/22",
    "end": "2023/01/05",
  },
  {
    "name": "錬金術士と謎の遺跡群島",
    "tagged": "錬金術士[れんきんじゅつし]と[]謎[なぞ]の[]遺跡[いせき]群島[ぐんとう]",
    "begin": "2022/11/24",
    "end": "2022/12/08",
  },
  {
    "name": "赫の涙月 菫の暁風",
    "tagged": "赫[あか]の[]涙月[るいげつ]&nbsp;[]菫[すみれ]の[]暁風[ぎょうふう]",
    "begin": "2022/09/15",
    "end": "2022/10/05",
  },
  {
    "name": "鋼鷲の冒険譚",
    "tagged": "鋼鷲[はがねわし]の[]冒険譚[ぼうけんたん]",
    "begin": "2022/07/28",
    "end": "2022/08/11",
  },
  {
    "name": "誠閃の剣 搖光の城",
    "tagged": "誠閃[せいせん]の[]剣[つるぎ]&nbsp;[]搖光[ようこう]の[]城[しろ]",
    "begin": "2022/05/26",
    "end": "2022/06/16",
  },
  {
    "name": "吟ずる瑠璃の楽章",
    "tagged": "吟[ぎん]する[]瑠璃[るり]の[]楽章[がくしょう]",
    "begin": "2022/04/28",
    "end": "2022/05/13",
  },
  {
    "name": "鳴動せし星霜の淵",
    "tagged": "鳴動[めいどう]せし[]星霜[せいそう]の[]淵[ふち]",
    "begin": "2022/02/24",
    "end": "2022/03/10",
  },
  {
    "name": "遡望せし虹彩の塔",
    "tagged": "遡望[さくぼう]せし[]虹彩[こうさい]の[]塔[とう]",
    "begin": "2021/12/29",
    "end": "2022/01/13",
  },
  {
    "name": "弧光は交わる世界にて",
    "tagged": "弧光[ここう]は[]交[まじ]わる[]世界[せかい]にて[]",
    "begin": "2021/11/25",
    "end": "2021/12/09",
  },
  {
    "name": "駆けよ 碧海の吹き風",
    "tagged": "駆[か]けよ&nbsp;[]碧海[へきかい]の[]吹[ふ]き[]風[かぜ]",
    "begin": "2021/09/16",
    "end": "2021/10/03",
  },
  {
    "name": "海に響くアイドルの歌",
    "tagged": "海[うみ]に[]響[ひび]くアイドルの[]歌[うた]",
    "begin": "2021/07/22",
    "end": "2021/08/05",
  },
  {
    "name": "照らす螺旋の鏡海",
    "tagged": "照[て]らす[]螺旋[らせん]の[]鏡海[きょうかい]",
    "begin": "2021/05/27",
    "end": "2021/06/17",
  },
  {
    "name": "讃える復興の迷路",
    "tagged": "讃[たた]える[]復興[ふっこう]の[]迷路[ラビリンス]",
    "begin": "2021/04/22",
    "end": "2021/05/06",
  },
  {
    "name": "暁射す氷華の嵐",
    "tagged": "暁[あかつき]射[さ]す[]氷華[ひょうか]の[]嵐[あらし]",
    "begin": "2021/02/25",
    "end": "2021/03/12",
  },
  {
    "name": "虚畳なりし限象",
    "tagged": "虚[うつろ]畳[かさ]なりし[]限象[げんしょう]",
    "begin": "2020/12/29",
    "end": "2021/01/14",
  },
  {
    "name": "激唱のユニバース",
    "tagged": "激唱[げきしょう]のユニバース[]",
    "begin": "2020/10/29",
    "end": "2020/11/12",
  },
  {
    "name": "刹那觀る胡蝶の夢",
    "tagged": "刹那[せつな]觀[み]る[]胡蝶[こちょう]の[]夢[ゆめ]",
    "begin": "2020/09/17",
    "end": "2020/10/01",
  },
  {
    "name": "極夜照らす幻光",
    "tagged": "極夜[きょくや]照[て]らす[]幻光[げんこう]",
    "begin": "2020/07/23",
    "end": "2020/08/06",
  },
  {
    "name": "神穹を衝く聖歌",
    "tagged": "神穹[しんきゅう]を[]衝[つ]く[]聖歌[せいか]",
    "begin": "2020/05/21",
    "end": "2020/06/03",
  },
  {
    "name": "闇靄払う銀翼",
    "tagged": "闇靄[やみもや]払[はら]う[]銀翼[ぎんよく]",
    "begin": "2020/03/26",
    "end": "2020/04/09",
  },
  {
    "name": "凍絶の北海",
    "tagged": "凍絶[とうぜつ]の[]北海[ほっかい]",
    "begin": "2020/02/27",
    "end": "2020/03/12",
  },
  {
    "name": "翳りし満ちる影の華",
    "tagged": "翳[かげ]りし[]満[み]ちる[]影[かげ]の[]華[はな]",
    "begin": "2019/12/26",
    "end": "2020/01/09",
  },
  {
    "name": "激奏のポラリス",
    "tagged": "激奏[げきそう]のポラリス[]",
    "begin": "2019/10/31",
    "end": "2019/11/14",
  },
  {
    "name": "悲歎せし焔海の詩",
    "tagged": "悲歎[ひたん]せし[]焔海[えんかい]の[]詩[うた]",
    "begin": "2019/09/11",
    "end": "2019/09/26",
  },
  {
    "name": "開かれし紺碧の砂箱",
    "tagged": "開[ひら]かれし[]紺碧[こんぺき]の[]砂箱[すなばこ]",
    "begin": "2019/07/31",
    "end": "2019/08/15",
  },
  {
    "name": "黒鉄の楽章、誓いの海",
    "tagged": "黒鉄[くろがね]の[]楽章[がくしょう]、[]誓[ちか]いの[]海[うみ]",
    "begin": "2019/05/23",
    "end": "2019/06/13",
  },
  {
    "name": "仮想繋げし共時性",
    "tagged": "仮想[かそう]繋[つな]げし[]共時性[シンクロニシティ]",
    "begin": "2019/04/26",
    "end": "2019/05/16",
  },
  {
    "name": "輝ける峡湾の星",
    "tagged": "輝[かがや]ける[]峡湾[きょうわん]の[]星[ほし]",
    "begin": "2019/03/07",
    "end": "2019/03/20",
  },
  {
    "name": "縹映る深緋の残響",
    "tagged": "縹[はなだ]映[うつ]る[]深緋[ふかひ]の[]残響[ざんきょう]",
    "begin": "2018/12/27",
    "end": "2019/01/17",
  },
  {
    "name": "南洋に靡く硝煙",
    "tagged": "南洋[なんよう]に[]靡[なび]く[]硝煙[しょうえん]",
    "begin": "2018/12/20",
    "end": "2018/12/27",
  },
  {
    "name": "夢幻の邂逅",
    "tagged": "夢幻[むげん]の[]邂逅[げいごう]",
    "begin": "2018/11/29",
    "end": "2018/12/13",
  },
  {
    "name": "闇に堕ちた青き翼",
    "tagged": "闇[やみ]に[]堕[お]ちた[]青[あお]き[]翼[つばさ]",
    "begin": "2018/10/25",
    "end": "2018/11/14",
  },
  {
    "name": "光と影のアイリス",
    "tagged": "光[ひかり]と[]影[かげ]のアイリス[]",
    "begin": "2018/07/26",
    "end": "2018/08/09",
  },
  {
    "name": "墨染まりし鋼の桜",
    "tagged": "墨[すみ]染[そ]まりし[]鋼[はがね]の[]桜[さくら]",
    "begin": "2018/05/31",
    "end": "2018/06/14",
  },
  {
    "name": "凛冽なりし冬の王冠",
    "tagged": "凛冽[りんれつ]なりし[]冬[ふゆ]の[]王冠[おうかん]",
    "begin": "2018/02/26",
    "end": "2018/03/15",
  },
  {
    "name": "別次元からの来訪者",
    "tagged": "別次元[べつじげん]からの[]来訪者[らいほうしゃ]",
    "begin": "2018/01/26",
    "end": "2018/02/12",
  },
  {
    "name": "鏡写されし異色",
    "tagged": "鏡[かがみ]写[うつ]されし[]異色[いしょく]",
    "begin": "2017/12/26",
    "end": "2018/01/12",
  },
  {
    "name": "紅染の来訪者",
    "tagged": "紅染[べにぞめ]の[]来訪者[らいほうしゃ]",
    "begin": "2017/10/27",
    "end": "2017/11/09",
  },
  {
    "name": "努力、希望と計画",
    "tagged": "努力[どりょく]、[]希望[きぼう]と[]計画[けいかく]",
    "begin": "2017/09/28",
    "end": "2017/10/08",
  }
];

function parseTextRuby(text) {
  let html = "";
  let rb = "";
  let rt = "";
  let mode = "rb";

  for (let i = 0; i < text.length; i++) {
    const c = text.charAt(i);
    if (mode === "rb") {
      if (c === "[") {
        html += `<rb>${rb}</rb>`;
        rb = "";
        mode = "rt";
        continue;
      }
      rb += c;
    }
    else if (mode === "rt") {
      if (c === "]") {
        html += `<rt>${rt}</rt>`;
        rt = "";
        mode = "rb";
        continue;
      }
      rt += c;
    }
  }

  return `<ruby>${html}</ruby>`;
}

const app = {
  el: '#app',
  data() {
    return {
      showTitle: true,
      events: AzurlaneEvents,
      selected: 0,
    };
  },
  computed: {
    selectedEvent() {
      return this.events[this.selected];
    },

    selectedEventPeriod() {
      return {
        begin: this.selectedEvent.begin.replaceAll('/', '.'),
        end: this.selectedEvent.end.replaceAll('/', '.'),
      }
    },

    eventTitleHtml() {
      return parseTextRuby(this.selectedEvent.tagged);
    }
  }
};

window.onload = function () {
  vueApp = new Vue(app);
};
